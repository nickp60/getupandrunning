#+title: Getting things working again

Congrats, Nick; you borked your computer again. Nice. classic you, amirite?  Luckily, past-Nick has your back.  Your welcome.


* Installing stuff from ppas
Lets get the basics installed.
#+BEGIN_SRC bash
for prog in i3 i3status i3blocks thunar rofi htop tree git keepassx gnome-tweak-tool terminator exfat-utils exfat-fuse emacs indicator-multiload fonts-inconsolata chromium-browser
do
  sudo apt install $prog -y
done


#+END_SRC


And also these,n which you will need later for certian R packages:

#+BEGIN_SRC bash
for prog in libssl-dev libxml2-dev libcurl4-openssl-dev
do
  sudo apt install $prog -y
done

#+END_SRC
* Conda
Now, lets get miniconda installed
#+BEGIN_SRC bash
 wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash Miniconda3-latest-Linux-x86_64.sh
conda config --add channels defaults
conda config --add channels conda-forge
conda config --add channels bioconda

#+END_SRC

* profile, etc:
first, grab `bash_preexec.sh1`
#+BEGIN_SRC
curl https://raw.githubusercontent.com/rcaloras/bash-preexec/master/bash-preexec.sh -o ~/.bash-preexec.sh
#+END_SRC


Lets get your profiles sorted out.
#+BEGIN_SRC bash
echo "source .nickstuff" >> ~/.bashrc
#+END_SRC

* emacs packages
Right, now you need to install some emacs packages that arent on MELPA.  These should be included in the repo, but if not, here ya go.

#+BEGIN_SRC bash

cd ~/.emacs.d/various/
# column marker package
wget https://www.emacswiki.org/emacs/download/column-marker.el

# workgroup package
git clone https://github.com/tlh/workgroups.el.git

#+END_SRC
For python syntax checking, ensure that you have pycodestyle (formerly pep8) and pylint installed.


** MELPA packages
for other packages to install, see the init file.  Heres the ones I remember:

- flymake
- ox-gfm
- ess
-

** issues
Sometime, if you have switched versions, you will need to run the following cmds to get rid of some compiled files
#+BEGIN_SRC bash
cd ~/.emacs.d/
find . -name '*.elc' | xargs rm
#+END_SRC

* Various packages
Add ~/bin/, and add it to your path, moron.
** Bandage
https://rrwick.github.io/Bandage/
#+BEGIN_SRC bash
https://github.com/rrwick/Bandage/releases/download/v0.8.1/Bandage_Ubuntu_dynamic_v0_8_1.zip
#+END_SRC

* TinyTex
See installation from https://yihui.name/tinytex/
#+BEGIN_SRC
wget -qO- \
  "https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh" | sh

tlmgr install texliveonfly

#+END_SRC
* R
Someone else did the hard work for you.  Download this gist, and run it:
https://gist.github.com/mGalarnyk/41c887e921e712baf86fecc507b3afc7
* i3
All of the i3 config info should be in the .config directory.

You will need to install a few things manually.
- fontawesome

to setup, clone this repo, delete your exisiting (mostly empty) config dir, and symlink the one in this repo
#+BEGIN_SRC
ln -s ~/GitHub/getupandrunning/.config/ ~/
#+END_SRC
* TravisCI
This shouldn't be a surprise, but you don't know much about cryptography, so it is.  You will need to update all the travis encrpted creds whenever you try to deply to pypi again.  So you will need to install travis:

#+BEGIN_SRC bash
gem install travis

travis encrypt **********
#+END_SRC

replace the existing credentials with this, and then deploy.
